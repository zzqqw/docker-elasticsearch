# 配置的集群名称
cluster.name: elasticsearch

# 当前配置所在机器的节点名
# node.name: "elasticsearch-master"

# 指定该节点是否有资格被选举成为node（注意这里只是设置成有资格),默认true
# node.master: true

# 指定该节点是否存储索引数据，默认为true。
node.data: true

# # 设置默认索引分片个数，默认为5片。7.X版本以上配置无效
# index.number_of_shards: 5

# # 设置默认索引副本个数，默认为1个副本。7.x版本以上配置无效
# index.number_of_replicas: 1

# 设置索引数据的存储路径
path.data: /usr/share/elasticsearch/data 

# 设置临时文件的存储路径
# path.work: /path/to/work

# 设置日志文件的存储路径
# path.logs: /path/to/logs

# 设置插件的存放路径
# path.plugins: /usr/share/elasticsearch/plugins

# 设置绑定的ip地址，可以是ipv4或ipv6的，默认为0.0.0.0，绑定这台机器的任何一个ip。
# network.bind_host: 0.0.0.0

# 设置其它节点和该节点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址。
network.publish_host: 0.0.0.0

# 这个参数是用来同时设置bind_host和publish_host上面两个参数。
network.host: 0.0.0.0

# 设置节点之间交互的tcp端口，默认是9300。
transport.tcp.port: 9300

# 设置是否压缩tcp传输时的数据，默认为false，不压缩。 
transport.tcp.compress: true

# 设置对外服务的http端口，默认为9200。 
http.port: 9200

# 设置内容的最大容量，默认100mb
http.max_content_length: 100mb

# 是否使用http协议对外提供服务，默认为true，开启。
http.enabled: true

# gateway的类型，默认为local即为本地文件系统，可以设置为本地文件系统，分布式文件系统，hadoop的HDFS，和amazon的s3服务器等。
# gateway.type: local

# 初始化数据恢复时，并发恢复线程的个数，默认为4。 
cluster.routing.allocation.node_initial_primaries_recoveries: 4


# 添加删除节点或负载均衡时并发恢复线程的个数，默认为4。 
cluster.routing.allocation.node_concurrent_recoveries: 4

 
# 设置数据恢复时限制的带宽，如入100mb，默认为0，即无限制。
# indices.recovery.max_size_per_sec: 0


# 设置这个参数来限制从其它分片恢复数据时最大同时打开并发流的个数，默认为5。 
# indices.recovery.concurrent_streams: 5

 
# 设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）。7.x版本无效
# discovery.zen.minimum_master_nodes: 1


# 设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错。7.x版本无效 
# discovery.zen.ping.timeout: 3

# 设置是否打开多播发现节点，默认是true。7.x版本无效 
# discovery.zen.ping.multicast.enabled: true

# 设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点。7.x版本无效 
# discovery.zen.ping.unicast.hosts: ["host1", "host2:port", "host3[portX-portY]"]


http.host: 0.0.0.0
# Uncomment the following lines for a production cluster deployment
#transport.host: 0.0.0.0
#discovery.zen.minimum_master_nodes: 1
http.cors.enabled: true
http.cors.allow-origin: "*"